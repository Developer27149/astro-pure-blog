---
import { SiteConfig } from "@config";
interface Props {
  activeNav: 'posts' | 'projects' | 'weekly'
}

const {activeNav} = Astro.props
---

<header class="flex gap-2 items-center text-sm">
  <a href="/" class="pr-4">@{SiteConfig.author}:</a>
  <a href="/posts">Posts</a>
  <span class="scale-80 opacity-80">/</span>
  <a href="/projects">Projects</a>
  <span class="scale-80 opacity-80">/</span>
  <a href="/weekly">weekly</a>
  <a
    href="/search"
    class="i-mdi-magnify ml-auto hover:scale-110 hover:text-orange-600 transition-all"
  ></a>
  <a
    href="/rss.xml"
    class="i-mdi-rss-box hover:scale-110 hover:text-orange-600 transition-all"
  ></a>
  <span
    id="theme-toggle"
    class="cursor-pointer flex items-center hover:scale-110 hover:text-orange-600 transition-all"
  >
    <i class="i-mdi-lightbulb-on-10 dark:inline-block hidden"></i>
    <i class="i-mdi-weather-night dark:hidden inline-block"></i>
  </span>
</header>

<script is:inline>
  const getTheme = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  };
  const theme = getTheme();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }
  window.localStorage.setItem("theme", theme);
  // add event listener to toggle theme
  window.addEventListener("load", () => {
    document
      .querySelector("#theme-toggle")
      ?.addEventListener("click", function () {
        const currentTheme = document.documentElement.classList.contains("dark")
          ? "dark"
          : "light";
        const newTheme = currentTheme === "dark" ? "light" : "dark";
        document.documentElement.classList.remove(currentTheme);
        document.documentElement.classList.add(newTheme);
        window.localStorage.setItem("theme", newTheme);
      });
    const header = document.querySelector("header");
    const links = header?.querySelectorAll("a");
    links?.forEach((link) => {
      
      if (window.location.href.startsWith(link.href)) {
        link.style.opacity = 1
      } 
    });
  });
</script>


<style>
header a {
  @apply opacity-10;
}
</style>